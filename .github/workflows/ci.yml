name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    outputs:
      affected-projects: ${{ steps.record-affected-projects.outputs.affected-projects }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Capture SHA in NX Cloud
        uses: nrwl/nx-set-shas@v4
        env:
          NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

      - name: Track main branch
        run: git branch --track main origin/main
        if: ${{ github.event_name == 'pull_request' }}

      - name: Check Formatting
        run: yarn nx-cloud record -- nx format:check
        env:
          NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

      - name: Lint
        run: yarn nx affected -t lint

      - name: Unit Tests
        run: yarn nx affected -t test

      - name: Build
        run: yarn nx affected -t build

      - name: E2E
        run: yarn nx affected -t e2e

      - name: Record Affected Projects
        id: record-affected-projects
        if: ${{ github.ref_name == 'main' }}
        run: yarn nx show projects --affected >> "$GITHUB_OUTPUT"

      - name: Setup Fly CLI
        if: ${{ github.ref_name == 'main' }}
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy API service
        if: ${{ github.ref_name == 'main' && contains(steps.record-affected-projects.outputs.affected-projects, 'service-api') }}
        run: yarn deploy:service-api --configuration=production
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Deploy Web App
        if: ${{ github.ref_name == 'main' && contains(steps.record-affected-projects.outputs.affected-projects, 'app-web') }}
        run: yarn deploy:app-web --configuration=production
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
