{
  "name": "@chrononomicon/source",
  "version": "0.0.0",
  "author": "Geoff Whatley <me@geoffwhatley.com> (http://github.com/meatwallace)",
  "license": "AGPL-3.0",
  "private": true,
  "type": "module",
  "scripts": {
    "clean": "./scripts/clean.sh",
    "build": "nx run-many -t build",
    "lint": "nx run-many -t lint",
    "test": "nx run-many -t test",
    "typecheck": "nx run-many -t typecheck",
    "e2e": "nx run-many -t e2e",
    "codegen:graphql": "TS_NODE_PROJECT=./tsconfig.codegen.json dotenvx run -f projects/service-api/.env.development -- graphql-codegen --require tsconfig-paths/register",
    "postgres:migrations-update": "nx migrations-update db-postgres",
    "postgres:migrations-generate": "nx migrations-generate db-postgres",
    "postgres:migrations-run:dev": "nx migrations-run-dev db-postgres",
    "postgres:migrations-run:prod": "nx migrations-run-prod db-postgres",
    "postgres:reset-dev": "cd projects/_scripts && tsx --tsconfig ./tsconfig.json ./reset-pg-dev.ts",
    "stack": "cd projects/_scripts && tsx --tsconfig ./tsconfig.json ./stack-cli.ts",
    "---PROJECT-SPECIFIC": "",
    "build:app-web": "nx build app-web",
    "build:service-api": "nx build service-api",
    "build:service-email": "nx build service-email",
    "build:service-session": "nx build service-session",
    "build:service-user": "nx build service-user",
    "build:service-verification": "nx build service-verification",
    "build:service-world": "nx build service-world",
    "deploy:app-web": "nx deploy app-web",
    "deploy:service-api": "nx deploy service-api",
    "deploy:service-email": "nx deploy service-email",
    "deploy:service-session": "nx deploy service-session",
    "deploy:service-user": "nx deploy service-user",
    "deploy:service-verification": "nx deploy service-verification",
    "deploy:service-world": "nx deploy service-world",
    "dev:app-web": "nx dev app-web",
    "dev:service-api": "yarn stack stop service-api && dotenvx run -f projects/service-api/.env.development -- yarn run nx serve service-api",
    "dev:service-email": "yarn stack stop service-email && dotenvx run -f projects/service-email/.env.development.local -f projects/service-email/.env.development -- yarn run nx serve service-email",
    "dev:service-session": "yarn stack stop service-session && dotenvx run -f projects/service-session/.env.development -- yarn run nx serve service-session",
    "dev:service-user": "yarn stack stop service-user && dotenvx run -f projects/service-user/.env.development -- yarn run nx serve service-user",
    "dev:service-verification": "yarn stack stop service-verification && dotenvx run -f projects/service-verification/.env.development -- yarn run nx serve service-verification",
    "dev:service-world": "yarn stack stop service-world && dotenvx run -f projects/service-world/.env.development -- yarn run nx serve service-world",
    "e2e:app-web": "nx e2e app-web-e2e",
    "serve:app-web": "dotenvx run -f projects/app-web/.env.development.local -- node ./projects/app-web/server.mjs",
    "test:start-pg": "nx start-pg-test-container scripts",
    "test:stop-pg": "nx stop-pg-test-container scripts",
    "test:app-web": "nx test-watch app-web",
    "test:lib-email-templates": "nx test-watch lib-email-templates",
    "test:lib-postgres-schema": "nx test-watch lib-postgres-schema",
    "test:lib-service-test-utils": "nx test-watch lib-service-test-utils",
    "test:lib-service-utils": "nx test-watch lib-service-utils",
    "test:service-api": "nx test-watch service-api",
    "test:service-email": "nx test-watch service-email",
    "test:service-session": "nx test-watch service-session",
    "test:service-user": "nx test-watch service-user",
    "test:service-verification": "nx test-watch service-verification",
    "test:service-world": "nx test-watch service-world",
    "---UTILITY": "",
    "postinstall": "husky"
  },
  "devDependencies": {
    "@0no-co/graphqlsp": "1.12.16",
    "@commander-js/extra-typings": "13.1.0",
    "@commitlint/cli": "19.7.1",
    "@dotenvx/dotenvx": "1.36.0",
    "@eslint/js": "9.20.0",
    "@graphql-codegen/cli": "5.0.5",
    "@graphql-codegen/client-preset": "4.6.2",
    "@graphql-codegen/schema-ast": "4.1.0",
    "@graphql-tools/executor-http": "1.2.7",
    "@graphql-typed-document-node/core": "3.2.0",
    "@mswjs/data": "0.16.2",
    "@nx/devkit": "20.3.4",
    "@nx/esbuild": "20.3.4",
    "@nx/eslint": "20.3.4",
    "@nx/js": "20.3.4",
    "@nx/node": "20.3.4",
    "@nx/playwright": "20.3.4",
    "@nx/react": "20.3.4",
    "@nx/vite": "20.3.4",
    "@nx/web": "20.3.4",
    "@nx/workspace": "20.3.4",
    "@parcel/watcher": "2.5.1",
    "@playwright/test": "1.50.1",
    "@react-router/dev": "7.1.1",
    "@swc-node/register": "1.10.9",
    "@swc/cli": "0.6.0",
    "@swc/core": "1.10.16",
    "@swc/helpers": "0.5.15",
    "@testcontainers/postgresql": "10.18.0",
    "@testing-library/dom": "10.4.0",
    "@testing-library/jest-dom": "6.6.3",
    "@testing-library/react": "16.2.0",
    "@testing-library/user-event": "14.6.1",
    "@types/bcryptjs": "2.4.6",
    "@types/node": "20.12.7",
    "@types/react": "19.0.8",
    "@types/react-dom": "19.0.3",
    "@types/react-is": "19.0.0",
    "@typescript-eslint/eslint-plugin": "8.24.0",
    "@typescript-eslint/parser": "8.24.0",
    "@typescript-eslint/utils": "8.24.0",
    "@vanilla-extract/vite-plugin": "5.0.1",
    "@vitest/coverage-v8": "3.0.5",
    "@vitest/expect": "3.0.5",
    "@vitest/ui": "3.0.5",
    "drizzle-kit": "0.30.4",
    "esbuild": "0.25.0",
    "eslint": "9.20.1",
    "eslint-config-prettier": "10.0.1",
    "eslint-plugin-drizzle": "0.2.3",
    "eslint-plugin-jsx-a11y": "6.10.2",
    "eslint-plugin-playwright": "2.2.0",
    "eslint-plugin-react": "7.37.4",
    "eslint-plugin-react-hooks": "5.1.0",
    "eslint-plugin-unicorn": "56.0.1",
    "graphql-transform-scalars": "2.1.1",
    "happy-dom": "17.1.0",
    "husky": "9.1.7",
    "is-ci": "4.1.0",
    "jest-extended": "4.0.2",
    "jwt-decode": "4.0.0",
    "lint-staged": "15.4.3",
    "msw": "2.7.0",
    "node-mocks-http": "1.16.2",
    "nx": "20.3.4",
    "playwright": "1.50.1",
    "prettier": "3.5.1",
    "tsconfig-paths": "4.2.0",
    "tslib": "2.8.1",
    "tsx": "4.19.2",
    "type-fest": "4.34.1",
    "typescript": "5.7.3",
    "typescript-eslint": "8.24.0",
    "vite": "6.1.0",
    "vite-tsconfig-paths": "5.1.4",
    "vitest": "3.0.5"
  },
  "dependencies": {
    "@conform-to/react": "1.2.2",
    "@conform-to/zod": "1.2.2",
    "@epic-web/totp": "2.1.1",
    "@hono/node-server": "1.13.8",
    "@oslojs/crypto": "1.0.1",
    "@paralleldrive/cuid2": "2.2.2",
    "@pothos/core": "4.3.0",
    "@react-email/components": "0.0.33",
    "@react-router/node": "7.1.1",
    "@react-router/serve": "7.1.1",
    "@vanilla-extract/css": "1.17.1",
    "@vanilla-extract/recipes": "0.5.5",
    "@vanilla-extract/sprinkles": "1.6.3",
    "bcryptjs": "3.0.0",
    "clsx": "2.1.1",
    "commander": "13.1.0",
    "date-fns": "4.1.0",
    "drizzle-orm": "0.39.3",
    "envalid": "8.0.0",
    "execa": "9.5.2",
    "got": "14.4.6",
    "graphql": "16.10.0",
    "graphql-request": "7.1.2",
    "graphql-scalars": "1.24.1",
    "graphql-yoga": "5.11.0",
    "hono": "4.7.1",
    "input-otp": "1.4.2",
    "isbot": "5.1.22",
    "jose": "5.9.6",
    "open-props": "1.7.12",
    "ora": "8.2.0",
    "pino": "9.6.0",
    "pino-pretty": "13.0.0",
    "postgres": "3.4.5",
    "react": "19.0.0",
    "react-dom": "19.0.0",
    "react-icons": "5.4.0",
    "react-is": "19.0.0",
    "react-router": "7.1.5",
    "remix-auth": "4.1.0",
    "remix-auth-oauth2": "3.2.2",
    "remix-hono": "0.0.18",
    "remix-utils": "8.1.0",
    "resend": "4.1.2",
    "spin-delay": "2.0.1",
    "tiny-invariant": "1.3.3",
    "uuid": "11.0.5",
    "zod": "3.24.2"
  },
  "packageManager": "yarn@4.6.0",
  "dockerfile": {
    "cache": "",
    "distroless": true
  },
  "workspaces": [
    "projects/*"
  ],
  "resolutions": {
    "msw@npm:^1.2.2": "2.2.14"
  }
}
